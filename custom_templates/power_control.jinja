# priority-ordered list of entities to control (first is lowest priority and will be turned off first)
{% set list_entities =
    [
       'switch.yeti_battery_charger_relay',
       'switch.converter_relay',
       'switch.water_heater_relay',
       'switch.fireplace_relay',
       'switch.dryer_relay',
       'switch.clam_lights_relay',
       'switch.side_deck_relay',
       'switch.mini_fridge_relay',
       'switch.dishwasher_relay',
       'switch.microwave_relay',
       'switch.washer_relay'
    ]
%}


{% macro power_control() %}
	{
		"Watt Sensor": "sensor.watchdog_power_3"
	}
{% endmacro %}

##############################################################
#         FROM THIS POINT DO NOT MODIFY
##############################################################
{% macro dict_device() %}
    {% set output = namespace(sensor_power_off=[], general_entity_on=[]) %}
    {
        {%- for entity_on in list_entities if has_value(entity_on) -%}
            {%- set output.general_entity_on = output.general_entity_on + [entity_on] -%}
            {# retrieve all device entities #}
            {%- set entities_devices = entity_on | device_id | device_entities -%}
                {# Return entity_id of power sensor if there is one associated to the given device #}
                {% set list_sensor_power = expand(entities_devices) | selectattr('state', 'is_number') | selectattr('domain', 'eq', 'sensor') | selectattr('attributes.device_class', 'defined') | selectattr('attributes.device_class', 'eq', 'power') | map(attribute='entity_id') | list %}
                {% set sensor_power = list_sensor_power[0] if list_sensor_power | count == 1 else 'unknown' %}
                "{{ state_attr(entity_on, 'friendly_name') }}": 
                {
                "entity" : "{{ entity_on }}",
                "state" : "{{ states(entity_on) }}",
                "sensor_power" : "{{ sensor_power }}",
                "power" : "{{ states(sensor_power) if sensor_power != 'unknown' else 'unknown'  }}",
                "real_active" : "{{ 'on' if (not is_state(entity_on, 'off') and sensor_power == 'unknown') or sensor_power != 'unknown' and states(sensor_power) | int(0) > 15 else 'off' }}"
                }
                {%- if not loop.last %},{% endif %}
        {% endfor -%}
    }
{% endmacro %}